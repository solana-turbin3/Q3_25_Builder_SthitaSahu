"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCollectionV1AccountDataSerializer = void 0;
const generated_1 = require("../generated");
const collectionV1AccountData_1 = require("../generated/types/collectionV1AccountData");
const plugins_1 = require("../plugins");
const pluginRegistryV1Data_1 = require("./pluginRegistryV1Data");
const getCollectionV1AccountDataSerializer = () => ({
    description: 'CollectionAccountData',
    fixedSize: null,
    maxSize: null,
    serialize: () => {
        throw new Error('Operation not supported.');
    },
    deserialize: (buffer, offset = 0) => {
        // Account.
        const [collection, collectionOffset] = (0, collectionV1AccountData_1.getCollectionV1AccountDataSerializer)().deserialize(buffer, offset);
        if (collection.key !== generated_1.Key.CollectionV1) {
            throw new Error(`Expected an Collection account, got key: ${collection.key}`);
        }
        let pluginHeader;
        let pluginRegistry;
        let pluginsList;
        let externalPluginAdaptersList;
        let finalOffset = collectionOffset;
        if (buffer.length !== collectionOffset) {
            [pluginHeader] = (0, generated_1.getPluginHeaderV1AccountDataSerializer)().deserialize(buffer, collectionOffset);
            [pluginRegistry, finalOffset] =
                (0, pluginRegistryV1Data_1.getPluginRegistryV1AccountDataSerializer)().deserialize(buffer, Number(pluginHeader.pluginRegistryOffset));
            pluginsList = (0, plugins_1.registryRecordsToPluginsList)(pluginRegistry.registry, buffer);
            externalPluginAdaptersList =
                (0, plugins_1.externalRegistryRecordsToExternalPluginAdapterList)(pluginRegistry.externalRegistry, buffer);
        }
        return [
            {
                pluginHeader,
                ...pluginsList,
                ...externalPluginAdaptersList,
                ...collection,
            },
            finalOffset,
        ];
    },
});
exports.getCollectionV1AccountDataSerializer = getCollectionV1AccountDataSerializer;
//# sourceMappingURL=collectionAccountData.js.map