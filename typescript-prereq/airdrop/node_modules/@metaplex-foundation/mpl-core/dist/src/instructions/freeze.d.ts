import { Context, PublicKey, Signer } from '@metaplex-foundation/umi';
import { AssetV1, CollectionV1 } from '../generated';
export type FreezeAssetArgs = {
    asset: AssetV1;
    delegate: PublicKey | Signer;
    authority?: Signer;
    collection?: CollectionV1;
};
/**
 * Freezes an asset and assigns the freeze delegate to the given address
 * @param context Umi context
 * @param args FreezeAssetArgs
 * @returns TransactionBuilder
 */
export declare function freezeAsset(context: Pick<Context, 'payer' | 'programs'>, { asset, authority, collection, delegate }: FreezeAssetArgs): import("@metaplex-foundation/umi").TransactionBuilder;
export type ThawAssetArgs = {
    asset: AssetV1;
    delegate: Signer;
    collection?: CollectionV1;
};
/**
 * Thaws an asset and assigns the freeze delegate back to the owner
 * @param context Umi context
 * @param args ThawAssetArgs
 * @returns TransactionBuilder
 */
export declare function thawAsset(context: Pick<Context, 'payer' | 'programs'>, { asset, delegate, collection }: ThawAssetArgs): import("@metaplex-foundation/umi").TransactionBuilder;
