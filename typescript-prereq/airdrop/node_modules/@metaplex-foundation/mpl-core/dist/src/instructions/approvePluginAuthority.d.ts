import { Context } from '@metaplex-foundation/umi';
import { approvePluginAuthorityV1, PluginType } from '../generated';
import { PluginAuthority } from '../plugins';
export type ApprovePluginAuthorityArgsPlugin = {
    type: keyof typeof PluginType;
};
export type ApprovePluginAuthorityArgs = Omit<Parameters<typeof approvePluginAuthorityV1>[1], 'pluginType' | 'newAuthority'> & {
    plugin: ApprovePluginAuthorityArgsPlugin;
    newAuthority: PluginAuthority;
};
export declare const approvePluginAuthority: (context: Pick<Context, 'payer' | 'programs'>, { plugin, newAuthority, ...args }: ApprovePluginAuthorityArgs) => import("@metaplex-foundation/umi").TransactionBuilder;
