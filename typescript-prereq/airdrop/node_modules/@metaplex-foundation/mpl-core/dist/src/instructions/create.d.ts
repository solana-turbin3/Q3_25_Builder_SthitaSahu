import { Context } from '@metaplex-foundation/umi';
import { CollectionV1, createV2 } from '../generated';
import { AssetPluginAuthorityPairArgsV2 } from '../plugins';
import { ExternalPluginAdapterInitInfoArgs } from '../plugins/externalPluginAdapters';
export type CreateArgsPlugin = AssetPluginAuthorityPairArgsV2 | ExternalPluginAdapterInitInfoArgs;
export type CreateArgs = Omit<Parameters<typeof createV2>[1], 'plugins' | 'externalPluginAdapters' | 'collection'> & {
    collection?: Pick<CollectionV1, 'publicKey' | 'oracles' | 'lifecycleHooks'>;
    plugins?: CreateArgsPlugin[];
};
export declare const create: (context: Pick<Context, 'payer' | 'programs' | 'eddsa' | 'identity'>, { asset, plugins, collection, ...args }: CreateArgs) => import("@metaplex-foundation/umi").TransactionBuilder;
