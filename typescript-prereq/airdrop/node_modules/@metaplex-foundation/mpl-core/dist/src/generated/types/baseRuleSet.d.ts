/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
export type BaseRuleSet = {
    __kind: 'None';
} | {
    __kind: 'ProgramAllowList';
    fields: [Array<PublicKey>];
} | {
    __kind: 'ProgramDenyList';
    fields: [Array<PublicKey>];
};
export type BaseRuleSetArgs = BaseRuleSet;
export declare function getBaseRuleSetSerializer(): Serializer<BaseRuleSetArgs, BaseRuleSet>;
export declare function baseRuleSet(kind: 'None'): GetDataEnumKind<BaseRuleSetArgs, 'None'>;
export declare function baseRuleSet(kind: 'ProgramAllowList', data: GetDataEnumKindContent<BaseRuleSetArgs, 'ProgramAllowList'>['fields']): GetDataEnumKind<BaseRuleSetArgs, 'ProgramAllowList'>;
export declare function baseRuleSet(kind: 'ProgramDenyList', data: GetDataEnumKindContent<BaseRuleSetArgs, 'ProgramDenyList'>['fields']): GetDataEnumKind<BaseRuleSetArgs, 'ProgramDenyList'>;
export declare function isBaseRuleSet<K extends BaseRuleSet['__kind']>(kind: K, value: BaseRuleSet): value is BaseRuleSet & {
    __kind: K;
};
