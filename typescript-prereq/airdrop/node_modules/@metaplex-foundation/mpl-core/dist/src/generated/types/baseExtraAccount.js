"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isBaseExtraAccount = exports.baseExtraAccount = exports.getBaseExtraAccountSerializer = void 0;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
const _1 = require(".");
function getBaseExtraAccountSerializer() {
    return (0, serializers_1.dataEnum)([
        [
            'PreconfiguredProgram',
            (0, serializers_1.struct)([
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
        [
            'PreconfiguredCollection',
            (0, serializers_1.struct)([
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
        [
            'PreconfiguredOwner',
            (0, serializers_1.struct)([
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
        [
            'PreconfiguredRecipient',
            (0, serializers_1.struct)([
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
        [
            'PreconfiguredAsset',
            (0, serializers_1.struct)([
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
        [
            'CustomPda',
            (0, serializers_1.struct)([
                ['seeds', (0, serializers_1.array)((0, _1.getBaseSeedSerializer)())],
                ['customProgramId', (0, serializers_1.option)((0, serializers_1.publicKey)())],
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
        [
            'Address',
            (0, serializers_1.struct)([
                ['address', (0, serializers_1.publicKey)()],
                ['isSigner', (0, serializers_1.bool)()],
                ['isWritable', (0, serializers_1.bool)()],
            ]),
        ],
    ], { description: 'BaseExtraAccount' });
}
exports.getBaseExtraAccountSerializer = getBaseExtraAccountSerializer;
function baseExtraAccount(kind, data) {
    return Array.isArray(data)
        ? { __kind: kind, fields: data }
        : { __kind: kind, ...(data ?? {}) };
}
exports.baseExtraAccount = baseExtraAccount;
function isBaseExtraAccount(kind, value) {
    return value.__kind === kind;
}
exports.isBaseExtraAccount = isBaseExtraAccount;
//# sourceMappingURL=baseExtraAccount.js.map