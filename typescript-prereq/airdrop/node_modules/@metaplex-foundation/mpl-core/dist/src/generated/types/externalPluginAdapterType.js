"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExternalPluginAdapterTypeSerializer = exports.ExternalPluginAdapterType = void 0;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
var ExternalPluginAdapterType;
(function (ExternalPluginAdapterType) {
    ExternalPluginAdapterType[ExternalPluginAdapterType["LifecycleHook"] = 0] = "LifecycleHook";
    ExternalPluginAdapterType[ExternalPluginAdapterType["Oracle"] = 1] = "Oracle";
    ExternalPluginAdapterType[ExternalPluginAdapterType["AppData"] = 2] = "AppData";
    ExternalPluginAdapterType[ExternalPluginAdapterType["LinkedLifecycleHook"] = 3] = "LinkedLifecycleHook";
    ExternalPluginAdapterType[ExternalPluginAdapterType["LinkedAppData"] = 4] = "LinkedAppData";
    ExternalPluginAdapterType[ExternalPluginAdapterType["DataSection"] = 5] = "DataSection";
})(ExternalPluginAdapterType = exports.ExternalPluginAdapterType || (exports.ExternalPluginAdapterType = {}));
function getExternalPluginAdapterTypeSerializer() {
    return (0, serializers_1.scalarEnum)(ExternalPluginAdapterType, {
        description: 'ExternalPluginAdapterType',
    });
}
exports.getExternalPluginAdapterTypeSerializer = getExternalPluginAdapterTypeSerializer;
//# sourceMappingURL=externalPluginAdapterType.js.map