/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { CollectionV1AccountData } from '../../hooked';
import { KeyArgs } from '../types';
export type CollectionV1 = Account<CollectionV1AccountData>;
export declare function deserializeCollectionV1(rawAccount: RpcAccount): CollectionV1;
export declare function fetchCollectionV1(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<CollectionV1>;
export declare function safeFetchCollectionV1(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<CollectionV1 | null>;
export declare function fetchAllCollectionV1(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<CollectionV1[]>;
export declare function safeFetchAllCollectionV1(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<CollectionV1[]>;
export declare function getCollectionV1GpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<CollectionV1, {
    key: KeyArgs;
    updateAuthority: PublicKey;
    name: string;
    uri: string;
    numMinted: number;
    currentSize: number;
}>;
