/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
export type BaseSeed = {
    __kind: 'Collection';
} | {
    __kind: 'Owner';
} | {
    __kind: 'Recipient';
} | {
    __kind: 'Asset';
} | {
    __kind: 'Address';
    fields: [PublicKey];
} | {
    __kind: 'Bytes';
    fields: [Uint8Array];
};
export type BaseSeedArgs = BaseSeed;
export declare function getBaseSeedSerializer(): Serializer<BaseSeedArgs, BaseSeed>;
export declare function baseSeed(kind: 'Collection'): GetDataEnumKind<BaseSeedArgs, 'Collection'>;
export declare function baseSeed(kind: 'Owner'): GetDataEnumKind<BaseSeedArgs, 'Owner'>;
export declare function baseSeed(kind: 'Recipient'): GetDataEnumKind<BaseSeedArgs, 'Recipient'>;
export declare function baseSeed(kind: 'Asset'): GetDataEnumKind<BaseSeedArgs, 'Asset'>;
export declare function baseSeed(kind: 'Address', data: GetDataEnumKindContent<BaseSeedArgs, 'Address'>['fields']): GetDataEnumKind<BaseSeedArgs, 'Address'>;
export declare function baseSeed(kind: 'Bytes', data: GetDataEnumKindContent<BaseSeedArgs, 'Bytes'>['fields']): GetDataEnumKind<BaseSeedArgs, 'Bytes'>;
export declare function isBaseSeed<K extends BaseSeed['__kind']>(kind: K, value: BaseSeed): value is BaseSeed & {
    __kind: K;
};
