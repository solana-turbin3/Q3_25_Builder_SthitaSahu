/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
export type BaseUpdateAuthority = {
    __kind: 'None';
} | {
    __kind: 'Address';
    fields: [PublicKey];
} | {
    __kind: 'Collection';
    fields: [PublicKey];
};
export type BaseUpdateAuthorityArgs = BaseUpdateAuthority;
export declare function getBaseUpdateAuthoritySerializer(): Serializer<BaseUpdateAuthorityArgs, BaseUpdateAuthority>;
export declare function baseUpdateAuthority(kind: 'None'): GetDataEnumKind<BaseUpdateAuthorityArgs, 'None'>;
export declare function baseUpdateAuthority(kind: 'Address', data: GetDataEnumKindContent<BaseUpdateAuthorityArgs, 'Address'>['fields']): GetDataEnumKind<BaseUpdateAuthorityArgs, 'Address'>;
export declare function baseUpdateAuthority(kind: 'Collection', data: GetDataEnumKindContent<BaseUpdateAuthorityArgs, 'Collection'>['fields']): GetDataEnumKind<BaseUpdateAuthorityArgs, 'Collection'>;
export declare function isBaseUpdateAuthority<K extends BaseUpdateAuthority['__kind']>(kind: K, value: BaseUpdateAuthority): value is BaseUpdateAuthority & {
    __kind: K;
};
