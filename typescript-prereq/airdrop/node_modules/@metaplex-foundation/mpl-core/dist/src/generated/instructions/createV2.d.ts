/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Option, OptionOrNullable, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { BaseExternalPluginAdapterInitInfo, BaseExternalPluginAdapterInitInfoArgs, DataState, DataStateArgs, PluginAuthorityPair, PluginAuthorityPairArgs } from '../types';
export type CreateV2InstructionAccounts = {
    /** The address of the new asset */
    asset: Signer;
    /** The collection to which the asset belongs */
    collection?: PublicKey | Pda;
    /** The authority signing for creation */
    authority?: Signer;
    /** The account paying for the storage fees */
    payer?: Signer;
    /** The owner of the new asset. Defaults to the authority if not present. */
    owner?: PublicKey | Pda;
    /** The authority on the new asset */
    updateAuthority?: PublicKey | Pda;
    /** The system program */
    systemProgram?: PublicKey | Pda;
    /** The SPL Noop Program */
    logWrapper?: PublicKey | Pda;
};
export type CreateV2InstructionData = {
    discriminator: number;
    dataState: DataState;
    name: string;
    uri: string;
    plugins: Option<Array<PluginAuthorityPair>>;
    externalPluginAdapters: Option<Array<BaseExternalPluginAdapterInitInfo>>;
};
export type CreateV2InstructionDataArgs = {
    dataState?: DataStateArgs;
    name: string;
    uri: string;
    plugins?: OptionOrNullable<Array<PluginAuthorityPairArgs>>;
    externalPluginAdapters?: OptionOrNullable<Array<BaseExternalPluginAdapterInitInfoArgs>>;
};
export declare function getCreateV2InstructionDataSerializer(): Serializer<CreateV2InstructionDataArgs, CreateV2InstructionData>;
export type CreateV2InstructionArgs = CreateV2InstructionDataArgs;
export declare function createV2(context: Pick<Context, 'payer' | 'programs'>, input: CreateV2InstructionAccounts & CreateV2InstructionArgs): TransactionBuilder;
