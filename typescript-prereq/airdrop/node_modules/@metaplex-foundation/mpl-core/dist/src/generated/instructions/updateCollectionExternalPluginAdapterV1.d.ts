/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { BaseExternalPluginAdapterKey, BaseExternalPluginAdapterKeyArgs, BaseExternalPluginAdapterUpdateInfo, BaseExternalPluginAdapterUpdateInfoArgs } from '../types';
export type UpdateCollectionExternalPluginAdapterV1InstructionAccounts = {
    /** The address of the asset */
    collection: PublicKey | Pda;
    /** The account paying for the storage fees */
    payer?: Signer;
    /** The owner or delegate of the asset */
    authority?: Signer;
    /** The system program */
    systemProgram?: PublicKey | Pda;
    /** The SPL Noop Program */
    logWrapper?: PublicKey | Pda;
};
export type UpdateCollectionExternalPluginAdapterV1InstructionData = {
    discriminator: number;
    key: BaseExternalPluginAdapterKey;
    updateInfo: BaseExternalPluginAdapterUpdateInfo;
};
export type UpdateCollectionExternalPluginAdapterV1InstructionDataArgs = {
    key: BaseExternalPluginAdapterKeyArgs;
    updateInfo: BaseExternalPluginAdapterUpdateInfoArgs;
};
export declare function getUpdateCollectionExternalPluginAdapterV1InstructionDataSerializer(): Serializer<UpdateCollectionExternalPluginAdapterV1InstructionDataArgs, UpdateCollectionExternalPluginAdapterV1InstructionData>;
export type UpdateCollectionExternalPluginAdapterV1InstructionArgs = UpdateCollectionExternalPluginAdapterV1InstructionDataArgs;
export declare function updateCollectionExternalPluginAdapterV1(context: Pick<Context, 'payer' | 'programs'>, input: UpdateCollectionExternalPluginAdapterV1InstructionAccounts & UpdateCollectionExternalPluginAdapterV1InstructionArgs): TransactionBuilder;
