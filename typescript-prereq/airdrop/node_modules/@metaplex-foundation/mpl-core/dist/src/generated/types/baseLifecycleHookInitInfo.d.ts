/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Option, OptionOrNullable, PublicKey } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { BaseExtraAccount, BaseExtraAccountArgs, BasePluginAuthority, BasePluginAuthorityArgs, ExternalCheckResult, ExternalCheckResultArgs, ExternalPluginAdapterSchema, ExternalPluginAdapterSchemaArgs, HookableLifecycleEvent, HookableLifecycleEventArgs } from '.';
export type BaseLifecycleHookInitInfo = {
    hookedProgram: PublicKey;
    initPluginAuthority: Option<BasePluginAuthority>;
    lifecycleChecks: Array<[HookableLifecycleEvent, ExternalCheckResult]>;
    extraAccounts: Option<Array<BaseExtraAccount>>;
    dataAuthority: Option<BasePluginAuthority>;
    schema: Option<ExternalPluginAdapterSchema>;
};
export type BaseLifecycleHookInitInfoArgs = {
    hookedProgram: PublicKey;
    initPluginAuthority: OptionOrNullable<BasePluginAuthorityArgs>;
    lifecycleChecks: Array<[HookableLifecycleEventArgs, ExternalCheckResultArgs]>;
    extraAccounts: OptionOrNullable<Array<BaseExtraAccountArgs>>;
    dataAuthority: OptionOrNullable<BasePluginAuthorityArgs>;
    schema: OptionOrNullable<ExternalPluginAdapterSchemaArgs>;
};
export declare function getBaseLifecycleHookInitInfoSerializer(): Serializer<BaseLifecycleHookInitInfoArgs, BaseLifecycleHookInitInfo>;
