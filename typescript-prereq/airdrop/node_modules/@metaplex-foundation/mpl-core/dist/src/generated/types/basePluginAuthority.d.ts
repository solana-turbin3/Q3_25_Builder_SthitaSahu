/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
export type BasePluginAuthority = {
    __kind: 'None';
} | {
    __kind: 'Owner';
} | {
    __kind: 'UpdateAuthority';
} | {
    __kind: 'Address';
    address: PublicKey;
};
export type BasePluginAuthorityArgs = BasePluginAuthority;
export declare function getBasePluginAuthoritySerializer(): Serializer<BasePluginAuthorityArgs, BasePluginAuthority>;
export declare function basePluginAuthority(kind: 'None'): GetDataEnumKind<BasePluginAuthorityArgs, 'None'>;
export declare function basePluginAuthority(kind: 'Owner'): GetDataEnumKind<BasePluginAuthorityArgs, 'Owner'>;
export declare function basePluginAuthority(kind: 'UpdateAuthority'): GetDataEnumKind<BasePluginAuthorityArgs, 'UpdateAuthority'>;
export declare function basePluginAuthority(kind: 'Address', data: GetDataEnumKindContent<BasePluginAuthorityArgs, 'Address'>): GetDataEnumKind<BasePluginAuthorityArgs, 'Address'>;
export declare function isBasePluginAuthority<K extends BasePluginAuthority['__kind']>(kind: K, value: BasePluginAuthority): value is BasePluginAuthority & {
    __kind: K;
};
