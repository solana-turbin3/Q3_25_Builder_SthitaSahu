/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
import { AddBlocker, AddBlockerArgs, Attributes, AttributesArgs, Autograph, AutographArgs, BaseMasterEdition, BaseMasterEditionArgs, BaseRoyalties, BaseRoyaltiesArgs, BubblegumV2, BubblegumV2Args, BurnDelegate, BurnDelegateArgs, Edition, EditionArgs, FreezeDelegate, FreezeDelegateArgs, FreezeExecute, FreezeExecuteArgs, ImmutableMetadata, ImmutableMetadataArgs, PermanentBurnDelegate, PermanentBurnDelegateArgs, PermanentFreezeDelegate, PermanentFreezeDelegateArgs, PermanentTransferDelegate, PermanentTransferDelegateArgs, TransferDelegate, TransferDelegateArgs, UpdateDelegate, UpdateDelegateArgs, VerifiedCreators, VerifiedCreatorsArgs } from '.';
export type Plugin = {
    __kind: 'Royalties';
    fields: [BaseRoyalties];
} | {
    __kind: 'FreezeDelegate';
    fields: [FreezeDelegate];
} | {
    __kind: 'BurnDelegate';
    fields: [BurnDelegate];
} | {
    __kind: 'TransferDelegate';
    fields: [TransferDelegate];
} | {
    __kind: 'UpdateDelegate';
    fields: [UpdateDelegate];
} | {
    __kind: 'PermanentFreezeDelegate';
    fields: [PermanentFreezeDelegate];
} | {
    __kind: 'Attributes';
    fields: [Attributes];
} | {
    __kind: 'PermanentTransferDelegate';
    fields: [PermanentTransferDelegate];
} | {
    __kind: 'PermanentBurnDelegate';
    fields: [PermanentBurnDelegate];
} | {
    __kind: 'Edition';
    fields: [Edition];
} | {
    __kind: 'MasterEdition';
    fields: [BaseMasterEdition];
} | {
    __kind: 'AddBlocker';
    fields: [AddBlocker];
} | {
    __kind: 'ImmutableMetadata';
    fields: [ImmutableMetadata];
} | {
    __kind: 'VerifiedCreators';
    fields: [VerifiedCreators];
} | {
    __kind: 'Autograph';
    fields: [Autograph];
} | {
    __kind: 'BubblegumV2';
    fields: [BubblegumV2];
} | {
    __kind: 'FreezeExecute';
    fields: [FreezeExecute];
};
export type PluginArgs = {
    __kind: 'Royalties';
    fields: [BaseRoyaltiesArgs];
} | {
    __kind: 'FreezeDelegate';
    fields: [FreezeDelegateArgs];
} | {
    __kind: 'BurnDelegate';
    fields: [BurnDelegateArgs];
} | {
    __kind: 'TransferDelegate';
    fields: [TransferDelegateArgs];
} | {
    __kind: 'UpdateDelegate';
    fields: [UpdateDelegateArgs];
} | {
    __kind: 'PermanentFreezeDelegate';
    fields: [PermanentFreezeDelegateArgs];
} | {
    __kind: 'Attributes';
    fields: [AttributesArgs];
} | {
    __kind: 'PermanentTransferDelegate';
    fields: [PermanentTransferDelegateArgs];
} | {
    __kind: 'PermanentBurnDelegate';
    fields: [PermanentBurnDelegateArgs];
} | {
    __kind: 'Edition';
    fields: [EditionArgs];
} | {
    __kind: 'MasterEdition';
    fields: [BaseMasterEditionArgs];
} | {
    __kind: 'AddBlocker';
    fields: [AddBlockerArgs];
} | {
    __kind: 'ImmutableMetadata';
    fields: [ImmutableMetadataArgs];
} | {
    __kind: 'VerifiedCreators';
    fields: [VerifiedCreatorsArgs];
} | {
    __kind: 'Autograph';
    fields: [AutographArgs];
} | {
    __kind: 'BubblegumV2';
    fields: [BubblegumV2Args];
} | {
    __kind: 'FreezeExecute';
    fields: [FreezeExecuteArgs];
};
export declare function getPluginSerializer(): Serializer<PluginArgs, Plugin>;
export declare function plugin(kind: 'Royalties', data: GetDataEnumKindContent<PluginArgs, 'Royalties'>['fields']): GetDataEnumKind<PluginArgs, 'Royalties'>;
export declare function plugin(kind: 'FreezeDelegate', data: GetDataEnumKindContent<PluginArgs, 'FreezeDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'FreezeDelegate'>;
export declare function plugin(kind: 'BurnDelegate', data: GetDataEnumKindContent<PluginArgs, 'BurnDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'BurnDelegate'>;
export declare function plugin(kind: 'TransferDelegate', data: GetDataEnumKindContent<PluginArgs, 'TransferDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'TransferDelegate'>;
export declare function plugin(kind: 'UpdateDelegate', data: GetDataEnumKindContent<PluginArgs, 'UpdateDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'UpdateDelegate'>;
export declare function plugin(kind: 'PermanentFreezeDelegate', data: GetDataEnumKindContent<PluginArgs, 'PermanentFreezeDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'PermanentFreezeDelegate'>;
export declare function plugin(kind: 'Attributes', data: GetDataEnumKindContent<PluginArgs, 'Attributes'>['fields']): GetDataEnumKind<PluginArgs, 'Attributes'>;
export declare function plugin(kind: 'PermanentTransferDelegate', data: GetDataEnumKindContent<PluginArgs, 'PermanentTransferDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'PermanentTransferDelegate'>;
export declare function plugin(kind: 'PermanentBurnDelegate', data: GetDataEnumKindContent<PluginArgs, 'PermanentBurnDelegate'>['fields']): GetDataEnumKind<PluginArgs, 'PermanentBurnDelegate'>;
export declare function plugin(kind: 'Edition', data: GetDataEnumKindContent<PluginArgs, 'Edition'>['fields']): GetDataEnumKind<PluginArgs, 'Edition'>;
export declare function plugin(kind: 'MasterEdition', data: GetDataEnumKindContent<PluginArgs, 'MasterEdition'>['fields']): GetDataEnumKind<PluginArgs, 'MasterEdition'>;
export declare function plugin(kind: 'AddBlocker', data: GetDataEnumKindContent<PluginArgs, 'AddBlocker'>['fields']): GetDataEnumKind<PluginArgs, 'AddBlocker'>;
export declare function plugin(kind: 'ImmutableMetadata', data: GetDataEnumKindContent<PluginArgs, 'ImmutableMetadata'>['fields']): GetDataEnumKind<PluginArgs, 'ImmutableMetadata'>;
export declare function plugin(kind: 'VerifiedCreators', data: GetDataEnumKindContent<PluginArgs, 'VerifiedCreators'>['fields']): GetDataEnumKind<PluginArgs, 'VerifiedCreators'>;
export declare function plugin(kind: 'Autograph', data: GetDataEnumKindContent<PluginArgs, 'Autograph'>['fields']): GetDataEnumKind<PluginArgs, 'Autograph'>;
export declare function plugin(kind: 'BubblegumV2', data: GetDataEnumKindContent<PluginArgs, 'BubblegumV2'>['fields']): GetDataEnumKind<PluginArgs, 'BubblegumV2'>;
export declare function plugin(kind: 'FreezeExecute', data: GetDataEnumKindContent<PluginArgs, 'FreezeExecute'>['fields']): GetDataEnumKind<PluginArgs, 'FreezeExecute'>;
export declare function isPlugin<K extends Plugin['__kind']>(kind: K, value: Plugin): value is Plugin & {
    __kind: K;
};
