"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.oracleManifest = exports.deserializeOracleValidation = exports.findOracleAccount = exports.oracleFromBase = exports.oracleUpdateInfoArgsToBase = exports.oracleInitInfoArgsToBase = void 0;
const extraAccount_1 = require("./extraAccount");
const generated_1 = require("../generated");
const lifecycleChecks_1 = require("./lifecycleChecks");
const pluginAuthority_1 = require("./pluginAuthority");
const validationResultsOffset_1 = require("./validationResultsOffset");
function oracleInitInfoArgsToBase(o) {
    return {
        baseAddress: o.baseAddress,
        baseAddressConfig: o.baseAddressConfig
            ? (0, extraAccount_1.extraAccountToBase)(o.baseAddressConfig)
            : null,
        lifecycleChecks: (0, lifecycleChecks_1.lifecycleChecksToBase)(o.lifecycleChecks),
        initPluginAuthority: o.initPluginAuthority
            ? (0, pluginAuthority_1.pluginAuthorityToBase)(o.initPluginAuthority)
            : null,
        resultsOffset: o.resultsOffset
            ? (0, validationResultsOffset_1.validationResultsOffsetToBase)(o.resultsOffset)
            : null,
    };
}
exports.oracleInitInfoArgsToBase = oracleInitInfoArgsToBase;
function oracleUpdateInfoArgsToBase(o) {
    return {
        baseAddressConfig: o.baseAddressConfig
            ? (0, extraAccount_1.extraAccountToBase)(o.baseAddressConfig)
            : null,
        lifecycleChecks: o.lifecycleChecks
            ? (0, lifecycleChecks_1.lifecycleChecksToBase)(o.lifecycleChecks)
            : null,
        resultsOffset: o.resultsOffset
            ? (0, validationResultsOffset_1.validationResultsOffsetToBase)(o.resultsOffset)
            : null,
    };
}
exports.oracleUpdateInfoArgsToBase = oracleUpdateInfoArgsToBase;
function oracleFromBase(s, r, account) {
    return {
        ...s,
        baseAddressConfig: s.baseAddressConfig.__option === 'Some'
            ? (0, extraAccount_1.extraAccountFromBase)(s.baseAddressConfig.value)
            : undefined,
        resultsOffset: (0, validationResultsOffset_1.validationResultsOffsetFromBase)(s.resultsOffset),
    };
}
exports.oracleFromBase = oracleFromBase;
function findOracleAccount(context, oracle, inputs) {
    if (!oracle.baseAddressConfig) {
        return oracle.baseAddress;
    }
    return (0, extraAccount_1.extraAccountToAccountMeta)(context, oracle.baseAddressConfig, {
        ...inputs,
        program: oracle.baseAddress,
    }).pubkey;
}
exports.findOracleAccount = findOracleAccount;
function deserializeOracleValidation(data, offset) {
    let offs = 0;
    if (offset.type === 'Custom') {
        offs = Number(offset.offset);
    }
    else if (offset.type === 'Anchor') {
        offs = 8;
    }
    return (0, generated_1.getOracleValidationSerializer)().deserialize(data, offs)[0];
}
exports.deserializeOracleValidation = deserializeOracleValidation;
exports.oracleManifest = {
    type: 'Oracle',
    fromBase: oracleFromBase,
    initToBase: oracleInitInfoArgsToBase,
    updateToBase: oracleUpdateInfoArgsToBase,
};
//# sourceMappingURL=oracle.js.map