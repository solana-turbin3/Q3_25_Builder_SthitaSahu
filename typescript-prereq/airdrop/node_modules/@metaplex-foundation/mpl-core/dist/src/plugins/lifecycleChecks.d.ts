import { ExternalCheckResult, HookableLifecycleEvent } from '../generated';
export type LifecycleEvent = 'create' | 'update' | 'transfer' | 'burn';
export declare enum CheckResult {
    CAN_LISTEN = 0,
    CAN_APPROVE = 1,
    CAN_REJECT = 2
}
export declare const adapterCheckResultToCheckResults: (check: ExternalCheckResult) => CheckResult[];
export declare const checkResultsToAdapterCheckResult: (results: CheckResult[]) => ExternalCheckResult;
export type LifecycleChecks = {
    [key in LifecycleEvent]?: CheckResult[];
};
export type LifecycleChecksContainer = {
    lifecycleChecks?: LifecycleChecks;
};
export declare function lifecycleCheckKeyToEnum(key: keyof LifecycleChecks): HookableLifecycleEvent;
export declare function hookableLifecycleEventToLifecycleCheckKey(event: HookableLifecycleEvent): keyof LifecycleChecks;
export declare function lifecycleChecksToBase(l: LifecycleChecks): [HookableLifecycleEvent, ExternalCheckResult][];
export declare function lifecycleChecksFromBase(l: [HookableLifecycleEvent, ExternalCheckResult][]): LifecycleChecks;
