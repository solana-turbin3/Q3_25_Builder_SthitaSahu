import { BaseDataSection, BaseDataSectionInitInfoArgs, BaseDataSectionUpdateInfoArgs, ExternalRegistryRecord } from '../generated';
import { ExternalPluginAdapterKey } from './externalPluginAdapterKey';
import { ExternalPluginAdapterManifest } from './externalPluginAdapterManifest';
import { BaseExternalPluginAdapter } from './externalPluginAdapters';
import { LinkedDataKey } from './linkedDataKey';
import { PluginAuthority } from './pluginAuthority';
export type DataSection = Omit<BaseDataSection, 'dataAuthority' | 'parentKey'> & {
    dataAuthority?: PluginAuthority;
    parentKey: LinkedDataKey;
    data?: any;
};
export type DataSectionPlugin = BaseExternalPluginAdapter & DataSection & {
    type: 'DataSection';
};
export type DataSectionInitInfoArgs = Omit<BaseDataSectionInitInfoArgs, 'parentKey'> & {
    type: 'DataSection';
    parentKey: LinkedDataKey;
};
export type DataSectionUpdateInfoArgs = BaseDataSectionUpdateInfoArgs & {
    key: ExternalPluginAdapterKey;
};
export declare function dataSectionInitInfoArgsToBase(d: DataSectionInitInfoArgs): BaseDataSectionInitInfoArgs;
export declare function dataSectionUpdateInfoArgsToBase(d: DataSectionUpdateInfoArgs): BaseDataSectionUpdateInfoArgs;
export declare function dataSectionFromBase(s: BaseDataSection, r: ExternalRegistryRecord, account: Uint8Array): DataSection;
export declare const dataSectionManifest: ExternalPluginAdapterManifest<DataSection, BaseDataSection, DataSectionInitInfoArgs, BaseDataSectionInitInfoArgs, DataSectionUpdateInfoArgs, BaseDataSectionUpdateInfoArgs>;
