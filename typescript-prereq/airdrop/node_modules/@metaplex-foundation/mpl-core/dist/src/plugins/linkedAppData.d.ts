import { BaseLinkedAppData, BaseLinkedAppDataInitInfoArgs, BaseLinkedAppDataUpdateInfoArgs, ExternalPluginAdapterSchema, ExternalRegistryRecord } from '../generated';
import { ExternalPluginAdapterKey } from './externalPluginAdapterKey';
import { ExternalPluginAdapterManifest } from './externalPluginAdapterManifest';
import { BaseExternalPluginAdapter } from './externalPluginAdapters';
import { LifecycleChecks } from './lifecycleChecks';
import { PluginAuthority } from './pluginAuthority';
export type LinkedAppData = Omit<BaseLinkedAppData, 'dataAuthority'> & {
    dataAuthority: PluginAuthority;
    data?: any;
};
export type LinkedAppDataPlugin = BaseExternalPluginAdapter & LinkedAppData & {
    type: 'LinkedAppData';
    dataAuthority: PluginAuthority;
};
export type LinkedAppDataInitInfoArgs = Omit<BaseLinkedAppDataInitInfoArgs, 'initPluginAuthority' | 'lifecycleChecks' | 'dataAuthority'> & {
    type: 'LinkedAppData';
    initPluginAuthority?: PluginAuthority;
    lifecycleChecks?: LifecycleChecks;
    schema?: ExternalPluginAdapterSchema;
    dataAuthority: PluginAuthority;
};
export type LinkedAppDataUpdateInfoArgs = Omit<BaseLinkedAppDataUpdateInfoArgs, 'schema'> & {
    key: ExternalPluginAdapterKey;
    schema?: ExternalPluginAdapterSchema;
};
export declare function linkedAppDataInitInfoArgsToBase(d: LinkedAppDataInitInfoArgs): BaseLinkedAppDataInitInfoArgs;
export declare function linkedAppDataUpdateInfoArgsToBase(d: LinkedAppDataUpdateInfoArgs): BaseLinkedAppDataUpdateInfoArgs;
export declare function linkedAppDataFromBase(s: BaseLinkedAppData, r: ExternalRegistryRecord, account: Uint8Array): LinkedAppData;
export declare const linkedAppDataManifest: ExternalPluginAdapterManifest<LinkedAppData, BaseLinkedAppData, LinkedAppDataInitInfoArgs, BaseLinkedAppDataInitInfoArgs, LinkedAppDataUpdateInfoArgs, BaseLinkedAppDataUpdateInfoArgs>;
