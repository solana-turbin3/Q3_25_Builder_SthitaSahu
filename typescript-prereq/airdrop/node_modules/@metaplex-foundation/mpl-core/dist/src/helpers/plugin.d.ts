import { PublicKey } from '@metaplex-foundation/umi';
import { AssetV1, CollectionV1, PluginType } from '../generated';
import { AssetPluginsList } from '../plugins';
export type AssetPluginKey = keyof AssetPluginsList;
/**
 * Convert a plugin type to a key for the asset plugins.
 * @param {AssetV1} pluginType Asset
 * @returns {AssetPluginKey}
 */
export declare function assetPluginKeyFromType(pluginType: PluginType): AssetPluginKey;
/**
 * Convert a plugin key to a type.
 * @param {AssetPluginKey} key Asset plugin key
 * @returns {PluginType}
 */
export declare function pluginTypeFromAssetPluginKey(key: AssetPluginKey): PluginType;
export type CheckPluginAuthoritiesArgs = {
    authority: PublicKey | string;
    pluginTypes: PluginType[];
    asset: AssetV1;
    collection?: CollectionV1;
};
/**
 * Check the authority for the given plugin types on an asset.
 * @param {CheckPluginAuthoritiesArgs} args Arguments
 * @returns {boolean[]} Array of booleans indicating if the authority matches the plugin authority
 */
export declare function checkPluginAuthorities({ authority, pluginTypes, asset, collection, }: CheckPluginAuthoritiesArgs): boolean[];
